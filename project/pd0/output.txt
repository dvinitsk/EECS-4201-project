make: Entering directory '/home/parallels/github/EECS-4201-project/project/pd0/verif/scripts'
echo Verilator Compilation
Verilator Compilation
mkdir -p /home/parallels/github/EECS-4201-project/project/pd0/verif/sim/verilator/test_pd
cd /home/parallels/github/EECS-4201-project/project/pd0/verif/sim/verilator/test_pd && verilator -sv --trace \
	-CFLAGS -DVCD -CFLAGS -DVCD_FILE=test_pd0.vcd \
	--cc /home/parallels/github/EECS-4201-project/project/pd0/design/code/constants_pkg.sv /home/parallels/github/EECS-4201-project/project/pd0/design/code/alu.sv /home/parallels/github/EECS-4201-project/project/pd0/design/code/assign_xor.sv /home/parallels/github/EECS-4201-project/project/pd0/design/code/reg_rst.sv /home/parallels/github/EECS-4201-project/project/pd0/design/code/three_stage_pipeline.sv /home/parallels/github/EECS-4201-project/project/pd0/design/code/pd0.sv /home/parallels/github/EECS-4201-project/project/pd0/verif/tests/clockgen.sv /home/parallels/github/EECS-4201-project/project/pd0/design/design_wrapper.sv \
	/home/parallels/github/EECS-4201-project/project/pd0/verif/tests/test_pd.sv \
	--exe /home/parallels/github/EECS-4201-project/project/pd0/verif/tests/test_pd.cpp  \
	-I/home/parallels/github/EECS-4201-project/project/pd0/design -I/home/parallels/github/EECS-4201-project/project/pd0/design/code \
	-top-module top \
	--Mdir /home/parallels/github/EECS-4201-project/project/pd0/verif/sim/verilator/test_pd \
	+define+VCD_FILE=\"test_pd0.vcd\" \
	+define+MEM_PATH_TO_PROGRAM="\"\""
<<<<<<< HEAD
make: Leaving directory '/home/parallels/github/EECS-4201-project/project/pd0/verif/scripts'
make: Entering directory '/home/parallels/github/EECS-4201-project/project/pd0/verif/scripts'
echo Verilator Compilation
Verilator Compilation
mkdir -p /home/parallels/github/EECS-4201-project/project/pd0/verif/sim/verilator/test_pd
cd /home/parallels/github/EECS-4201-project/project/pd0/verif/sim/verilator/test_pd && verilator -sv --trace \
	-CFLAGS -DVCD -CFLAGS -DVCD_FILE=test_pd0.vcd \
	--cc /home/parallels/github/EECS-4201-project/project/pd0/design/code/constants_pkg.sv /home/parallels/github/EECS-4201-project/project/pd0/design/code/alu.sv /home/parallels/github/EECS-4201-project/project/pd0/design/code/assign_xor.sv /home/parallels/github/EECS-4201-project/project/pd0/design/code/reg_rst.sv /home/parallels/github/EECS-4201-project/project/pd0/design/code/three_stage_pipeline.sv /home/parallels/github/EECS-4201-project/project/pd0/design/code/pd0.sv /home/parallels/github/EECS-4201-project/project/pd0/verif/tests/clockgen.sv /home/parallels/github/EECS-4201-project/project/pd0/design/design_wrapper.sv \
	/home/parallels/github/EECS-4201-project/project/pd0/verif/tests/test_pd.sv \
	--exe /home/parallels/github/EECS-4201-project/project/pd0/verif/tests/test_pd.cpp  \
	-I/home/parallels/github/EECS-4201-project/project/pd0/design -I/home/parallels/github/EECS-4201-project/project/pd0/design/code \
	-top-module top \
	--Mdir /home/parallels/github/EECS-4201-project/project/pd0/verif/sim/verilator/test_pd \
	+define+VCD_FILE=\"test_pd0.vcd\" \
	+define+MEM_PATH_TO_PROGRAM="\"\""
make: Leaving directory '/home/parallels/github/EECS-4201-project/project/pd0/verif/scripts'
make: Entering directory '/home/parallels/github/EECS-4201-project/project/pd0/verif/scripts'
echo Verilator Compilation
Verilator Compilation
mkdir -p /home/parallels/github/EECS-4201-project/project/pd0/verif/sim/verilator/test_pd
cd /home/parallels/github/EECS-4201-project/project/pd0/verif/sim/verilator/test_pd && verilator -sv --trace \
	-CFLAGS -DVCD -CFLAGS -DVCD_FILE=test_pd0.vcd \
	--cc /home/parallels/github/EECS-4201-project/project/pd0/design/code/constants_pkg.sv /home/parallels/github/EECS-4201-project/project/pd0/design/code/alu.sv /home/parallels/github/EECS-4201-project/project/pd0/design/code/assign_xor.sv /home/parallels/github/EECS-4201-project/project/pd0/design/code/reg_rst.sv /home/parallels/github/EECS-4201-project/project/pd0/design/code/three_stage_pipeline.sv /home/parallels/github/EECS-4201-project/project/pd0/design/code/pd0.sv /home/parallels/github/EECS-4201-project/project/pd0/verif/tests/clockgen.sv /home/parallels/github/EECS-4201-project/project/pd0/design/design_wrapper.sv \
	/home/parallels/github/EECS-4201-project/project/pd0/verif/tests/test_pd.sv \
	--exe /home/parallels/github/EECS-4201-project/project/pd0/verif/tests/test_pd.cpp  \
	-I/home/parallels/github/EECS-4201-project/project/pd0/design -I/home/parallels/github/EECS-4201-project/project/pd0/design/code \
	-top-module top \
	--Mdir /home/parallels/github/EECS-4201-project/project/pd0/verif/sim/verilator/test_pd \
	+define+VCD_FILE=\"test_pd0.vcd\" \
	+define+MEM_PATH_TO_PROGRAM="\"\""
make -C /home/parallels/github/EECS-4201-project/project/pd0/verif/sim/verilator/test_pd -f Vtop.mk Vtop
make[1]: Entering directory '/home/parallels/github/EECS-4201-project/project/pd0/verif/sim/verilator/test_pd'
g++  -I.  -MMD -I/usr/share/verilator/include -I/usr/share/verilator/include/vltstd -DVM_COVERAGE=0 -DVM_SC=0 -DVM_TRACE=1 -DVM_TRACE_FST=0 -DVM_TRACE_VCD=1 -faligned-new -fcf-protection=none -Wno-bool-operation -Wno-overloaded-virtual -Wno-shadow -Wno-sign-compare -Wno-uninitialized -Wno-unused-but-set-parameter -Wno-unused-but-set-variable -Wno-unused-parameter -Wno-unused-variable     -DVCD -DVCD_FILE=test_pd0.vcd   -Os -c -o test_pd.o /home/parallels/github/EECS-4201-project/project/pd0/verif/tests/test_pd.cpp
g++ -Os  -I.  -MMD -I/usr/share/verilator/include -I/usr/share/verilator/include/vltstd -DVM_COVERAGE=0 -DVM_SC=0 -DVM_TRACE=1 -DVM_TRACE_FST=0 -DVM_TRACE_VCD=1 -faligned-new -fcf-protection=none -Wno-bool-operation -Wno-overloaded-virtual -Wno-shadow -Wno-sign-compare -Wno-uninitialized -Wno-unused-but-set-parameter -Wno-unused-but-set-variable -Wno-unused-parameter -Wno-unused-variable     -DVCD -DVCD_FILE=test_pd0.vcd   -c -o verilated.o /usr/share/verilator/include/verilated.cpp
g++ -Os  -I.  -MMD -I/usr/share/verilator/include -I/usr/share/verilator/include/vltstd -DVM_COVERAGE=0 -DVM_SC=0 -DVM_TRACE=1 -DVM_TRACE_FST=0 -DVM_TRACE_VCD=1 -faligned-new -fcf-protection=none -Wno-bool-operation -Wno-overloaded-virtual -Wno-shadow -Wno-sign-compare -Wno-uninitialized -Wno-unused-but-set-parameter -Wno-unused-but-set-variable -Wno-unused-parameter -Wno-unused-variable     -DVCD -DVCD_FILE=test_pd0.vcd   -c -o verilated_dpi.o /usr/share/verilator/include/verilated_dpi.cpp
g++ -Os  -I.  -MMD -I/usr/share/verilator/include -I/usr/share/verilator/include/vltstd -DVM_COVERAGE=0 -DVM_SC=0 -DVM_TRACE=1 -DVM_TRACE_FST=0 -DVM_TRACE_VCD=1 -faligned-new -fcf-protection=none -Wno-bool-operation -Wno-overloaded-virtual -Wno-shadow -Wno-sign-compare -Wno-uninitialized -Wno-unused-but-set-parameter -Wno-unused-but-set-variable -Wno-unused-parameter -Wno-unused-variable     -DVCD -DVCD_FILE=test_pd0.vcd   -c -o verilated_vcd_c.o /usr/share/verilator/include/verilated_vcd_c.cpp
g++ -Os  -I.  -MMD -I/usr/share/verilator/include -I/usr/share/verilator/include/vltstd -DVM_COVERAGE=0 -DVM_SC=0 -DVM_TRACE=1 -DVM_TRACE_FST=0 -DVM_TRACE_VCD=1 -faligned-new -fcf-protection=none -Wno-bool-operation -Wno-overloaded-virtual -Wno-shadow -Wno-sign-compare -Wno-uninitialized -Wno-unused-but-set-parameter -Wno-unused-but-set-variable -Wno-unused-parameter -Wno-unused-variable     -DVCD -DVCD_FILE=test_pd0.vcd   -c -o verilated_threads.o /usr/share/verilator/include/verilated_threads.cpp
/usr/bin/python3 /usr/share/verilator/bin/verilator_includer -DVL_INCLUDE_OPT=include Vtop.cpp Vtop__Dpi_Export__0.cpp Vtop___024root__DepSet_h84412442__0.cpp Vtop___024root__DepSet_heccd7ead__0.cpp Vtop__Dpi.cpp Vtop__Trace__0.cpp Vtop___024root__Slow.cpp Vtop___024root__DepSet_h84412442__0__Slow.cpp Vtop___024root__DepSet_heccd7ead__0__Slow.cpp Vtop___024unit__Slow.cpp Vtop___024unit__DepSet_hff17caec__0__Slow.cpp Vtop_constants_pkg__Slow.cpp Vtop_constants_pkg__DepSet_hb66d5be2__0__Slow.cpp Vtop__Syms.cpp Vtop__Trace__0__Slow.cpp Vtop__TraceDecls__0__Slow.cpp > Vtop__ALL.cpp
g++ -Os  -I.  -MMD -I/usr/share/verilator/include -I/usr/share/verilator/include/vltstd -DVM_COVERAGE=0 -DVM_SC=0 -DVM_TRACE=1 -DVM_TRACE_FST=0 -DVM_TRACE_VCD=1 -faligned-new -fcf-protection=none -Wno-bool-operation -Wno-overloaded-virtual -Wno-shadow -Wno-sign-compare -Wno-uninitialized -Wno-unused-but-set-parameter -Wno-unused-but-set-variable -Wno-unused-parameter -Wno-unused-variable     -DVCD -DVCD_FILE=test_pd0.vcd   -c -o Vtop__ALL.o Vtop__ALL.cpp
echo "" > Vtop__ALL.verilator_deplist.tmp
Archive ar -rcs Vtop__ALL.a Vtop__ALL.o
g++     test_pd.o verilated.o verilated_dpi.o verilated_vcd_c.o verilated_threads.o Vtop__ALL.a    -pthread -lpthread -latomic   -o Vtop
rm Vtop__ALL.verilator_deplist.tmp
=======
make -C /home/parallels/github/EECS-4201-project/project/pd0/verif/sim/verilator/test_pd -f Vtop.mk Vtop
make[1]: Entering directory '/home/parallels/github/EECS-4201-project/project/pd0/verif/sim/verilator/test_pd'
make[1]: 'Vtop' is up to date.
>>>>>>> e2ce545 ( Included an output.txt file, this is the output of test_pd.sv)
make[1]: Leaving directory '/home/parallels/github/EECS-4201-project/project/pd0/verif/sim/verilator/test_pd'
echo Verilator Run
Verilator Run
cd /home/parallels/github/EECS-4201-project/project/pd0/verif/sim/verilator/test_pd && ./Vtop
 clk = 0
 clk = 0
 clk = 1
 clk = 0
###########
 clk = 1
 clk = 0
###########
 clk = 1
 clk = 0
###########
 clk = 1
 clk = 0
###########
 clk = 1
 clk = 0
###########
 clk = 1
 clk = 0
###########
 clk = 1
 clk = 0
###########
 clk = 1
 clk = 0
###########
 clk = 1
 clk = 0
###########
 clk = 1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000001001, op2=00100000000000000000000000000001, out=10111111111111111111111111111111
[ALU] inp1=00000000000000000000000000001001, inp2=01100000000000000000000000000000, alusel=01, res=10100000000000000000000000001001
[REG] inp=00000000000000000000000000001001, out=00000000000000000000000000001000
[ASSIGN_XOR] op1=1, op2=0, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000001010, op2=10000000000000000000000000000001, out=11011111111111111111111111111111
[ALU] inp1=00000000000000000000000000001010, inp2=01010000000000000000000000000000, alusel=10, res=00000000000000000000000000000000
[REG] inp=00000000000000000000000000001010, out=00000000000000000000000000001001
[ASSIGN_XOR] op1=0, op2=1, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000001011, op2=10100000000000000000000000000001, out=00000000000000000000000000000000
[ALU] inp1=00000000000000000000000000001011, inp2=01110000000000000000000000000000, alusel=11, res=01110000000000000000000000001011
[REG] inp=00000000000000000000000000001011, out=00000000000000000000000000001010
[ASSIGN_XOR] op1=1, op2=1, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000001100, op2=01000000000000000000000000000001, out=00100000000000000000000000000000
[ALU] inp1=00000000000000000000000000001100, inp2=11000000000000000000000000000000, alusel=00, res=11000000000000000000000000001100
[REG] inp=00000000000000000000000000001100, out=00000000000000000000000000001011
[ASSIGN_XOR] op1=0, op2=0, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000001101, op2=01100000000000000000000000000001, out=10000000000000000000000000000000
[ALU] inp1=00000000000000000000000000001101, inp2=11100000000000000000000000000000, alusel=01, res=00100000000000000000000000001101
[REG] inp=00000000000000000000000000001101, out=00000000000000000000000000001100
[ASSIGN_XOR] op1=1, op2=0, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000001110, op2=11000000000000000000000000000001, out=10100000000000000000000000000000
[ALU] inp1=00000000000000000000000000001110, inp2=11010000000000000000000000000000, alusel=10, res=00000000000000000000000000000000
[REG] inp=00000000000000000000000000001110, out=00000000000000000000000000001101
[ASSIGN_XOR] op1=0, op2=1, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000001111, op2=11100000000000000000000000000001, out=01000000000000000000000000000000
[ALU] inp1=00000000000000000000000000001111, inp2=11110000000000000000000000000000, alusel=11, res=11110000000000000000000000001111
[REG] inp=00000000000000000000000000001111, out=00000000000000000000000000001110
[ASSIGN_XOR] op1=1, op2=1, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000010000, op2=00000000000000000000000000000010, out=01100000000000000000000000000000
[ALU] inp1=00000000000000000000000000010000, inp2=00000000000000000000000000000001, alusel=00, res=00000000000000000000000000010001
[REG] inp=00000000000000000000000000010000, out=00000000000000000000000000001111
[ASSIGN_XOR] op1=0, op2=0, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000010001, op2=00100000000000000000000000000010, out=11000000000000000000000000000000
[ALU] inp1=00000000000000000000000000010001, inp2=00100000000000000000000000000001, alusel=01, res=11100000000000000000000000010000
[REG] inp=00000000000000000000000000010001, out=00000000000000000000000000010000
[ASSIGN_XOR] op1=1, op2=0, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000010010, op2=10000000000000000000000000000010, out=11100000000000000000000000000000
[ALU] inp1=00000000000000000000000000010010, inp2=00010000000000000000000000000001, alusel=10, res=00000000000000000000000000000000
[REG] inp=00000000000000000000000000010010, out=00000000000000000000000000010001
[ASSIGN_XOR] op1=0, op2=1, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000010011, op2=10100000000000000000000000000010, out=00000000000000000000000000000001
[ALU] inp1=00000000000000000000000000010011, inp2=00110000000000000000000000000001, alusel=11, res=00110000000000000000000000010011
[REG] inp=00000000000000000000000000010011, out=00000000000000000000000000010010
[ASSIGN_XOR] op1=1, op2=1, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000010100, op2=01000000000000000000000000000010, out=00100000000000000000000000000001
[ALU] inp1=00000000000000000000000000010100, inp2=10000000000000000000000000000001, alusel=00, res=10000000000000000000000000010101
[REG] inp=00000000000000000000000000010100, out=00000000000000000000000000010011
[ASSIGN_XOR] op1=0, op2=0, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000010101, op2=01100000000000000000000000000010, out=10000000000000000000000000000001
[ALU] inp1=00000000000000000000000000010101, inp2=10100000000000000000000000000001, alusel=01, res=01100000000000000000000000010100
[REG] inp=00000000000000000000000000010101, out=00000000000000000000000000010100
[ASSIGN_XOR] op1=1, op2=0, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000010110, op2=11000000000000000000000000000010, out=10100000000000000000000000000001
[ALU] inp1=00000000000000000000000000010110, inp2=10010000000000000000000000000001, alusel=10, res=00000000000000000000000000000000
[REG] inp=00000000000000000000000000010110, out=00000000000000000000000000010101
[ASSIGN_XOR] op1=0, op2=1, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000010111, op2=11100000000000000000000000000010, out=01000000000000000000000000000001
[ALU] inp1=00000000000000000000000000010111, inp2=10110000000000000000000000000001, alusel=11, res=10110000000000000000000000010111
[REG] inp=00000000000000000000000000010111, out=00000000000000000000000000010110
[ASSIGN_XOR] op1=1, op2=1, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000011000, op2=00000000000000000000000000000011, out=01100000000000000000000000000001
[ALU] inp1=00000000000000000000000000011000, inp2=01000000000000000000000000000001, alusel=00, res=01000000000000000000000000011001
[REG] inp=00000000000000000000000000011000, out=00000000000000000000000000010111
[ASSIGN_XOR] op1=0, op2=0, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000011001, op2=00100000000000000000000000000011, out=11000000000000000000000000000001
[ALU] inp1=00000000000000000000000000011001, inp2=01100000000000000000000000000001, alusel=01, res=10100000000000000000000000011000
[REG] inp=00000000000000000000000000011001, out=00000000000000000000000000011000
[ASSIGN_XOR] op1=1, op2=0, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000011010, op2=10000000000000000000000000000011, out=11100000000000000000000000000001
[ALU] inp1=00000000000000000000000000011010, inp2=01010000000000000000000000000001, alusel=10, res=00000000000000000000000000000000
[REG] inp=00000000000000000000000000011010, out=00000000000000000000000000011001
[ASSIGN_XOR] op1=0, op2=1, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000011011, op2=10100000000000000000000000000011, out=00000000000000000000000000000010
[ALU] inp1=00000000000000000000000000011011, inp2=01110000000000000000000000000001, alusel=11, res=01110000000000000000000000011011
[REG] inp=00000000000000000000000000011011, out=00000000000000000000000000011010
[ASSIGN_XOR] op1=1, op2=1, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000011100, op2=01000000000000000000000000000011, out=00100000000000000000000000000010
[ALU] inp1=00000000000000000000000000011100, inp2=11000000000000000000000000000001, alusel=00, res=11000000000000000000000000011101
[REG] inp=00000000000000000000000000011100, out=00000000000000000000000000011011
[ASSIGN_XOR] op1=0, op2=0, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000011101, op2=01100000000000000000000000000011, out=10000000000000000000000000000010
[ALU] inp1=00000000000000000000000000011101, inp2=11100000000000000000000000000001, alusel=01, res=00100000000000000000000000011100
[REG] inp=00000000000000000000000000011101, out=00000000000000000000000000011100
[ASSIGN_XOR] op1=1, op2=0, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000011110, op2=11000000000000000000000000000011, out=10100000000000000000000000000010
[ALU] inp1=00000000000000000000000000011110, inp2=11010000000000000000000000000001, alusel=10, res=00000000000000000000000000000000
[REG] inp=00000000000000000000000000011110, out=00000000000000000000000000011101
[ASSIGN_XOR] op1=0, op2=1, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000011111, op2=11100000000000000000000000000011, out=01000000000000000000000000000010
[ALU] inp1=00000000000000000000000000011111, inp2=11110000000000000000000000000001, alusel=11, res=11110000000000000000000000011111
[REG] inp=00000000000000000000000000011111, out=00000000000000000000000000011110
[ASSIGN_XOR] op1=1, op2=1, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000100000, op2=00000000000000000000000000000100, out=01100000000000000000000000000010
[ALU] inp1=00000000000000000000000000100000, inp2=00000000000000000000000000000010, alusel=00, res=00000000000000000000000000100010
[REG] inp=00000000000000000000000000100000, out=00000000000000000000000000011111
[ASSIGN_XOR] op1=0, op2=0, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000100001, op2=00100000000000000000000000000100, out=11000000000000000000000000000010
[ALU] inp1=00000000000000000000000000100001, inp2=00100000000000000000000000000010, alusel=01, res=11100000000000000000000000011111
[REG] inp=00000000000000000000000000100001, out=00000000000000000000000000100000
[ASSIGN_XOR] op1=1, op2=0, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000100010, op2=10000000000000000000000000000100, out=11100000000000000000000000000010
[ALU] inp1=00000000000000000000000000100010, inp2=00010000000000000000000000000010, alusel=10, res=00000000000000000000000000000010
[REG] inp=00000000000000000000000000100010, out=00000000000000000000000000100001
[ASSIGN_XOR] op1=0, op2=1, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000100011, op2=10100000000000000000000000000100, out=00000000000000000000000000000011
[ALU] inp1=00000000000000000000000000100011, inp2=00110000000000000000000000000010, alusel=11, res=00110000000000000000000000100011
[REG] inp=00000000000000000000000000100011, out=00000000000000000000000000100010
[ASSIGN_XOR] op1=1, op2=1, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000100100, op2=01000000000000000000000000000100, out=00100000000000000000000000000011
[ALU] inp1=00000000000000000000000000100100, inp2=10000000000000000000000000000010, alusel=00, res=10000000000000000000000000100110
[REG] inp=00000000000000000000000000100100, out=00000000000000000000000000100011
[ASSIGN_XOR] op1=0, op2=0, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000100101, op2=01100000000000000000000000000100, out=10000000000000000000000000000011
[ALU] inp1=00000000000000000000000000100101, inp2=10100000000000000000000000000010, alusel=01, res=01100000000000000000000000100011
[REG] inp=00000000000000000000000000100101, out=00000000000000000000000000100100
[ASSIGN_XOR] op1=1, op2=0, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000100110, op2=11000000000000000000000000000100, out=10100000000000000000000000000011
[ALU] inp1=00000000000000000000000000100110, inp2=10010000000000000000000000000010, alusel=10, res=00000000000000000000000000000010
[REG] inp=00000000000000000000000000100110, out=00000000000000000000000000100101
[ASSIGN_XOR] op1=0, op2=1, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000100111, op2=11100000000000000000000000000100, out=01000000000000000000000000000011
[ALU] inp1=00000000000000000000000000100111, inp2=10110000000000000000000000000010, alusel=11, res=10110000000000000000000000100111
[REG] inp=00000000000000000000000000100111, out=00000000000000000000000000100110
[ASSIGN_XOR] op1=1, op2=1, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000101000, op2=00000000000000000000000000000101, out=01100000000000000000000000000011
[ALU] inp1=00000000000000000000000000101000, inp2=01000000000000000000000000000010, alusel=00, res=01000000000000000000000000101010
[REG] inp=00000000000000000000000000101000, out=00000000000000000000000000100111
[ASSIGN_XOR] op1=0, op2=0, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000101001, op2=00100000000000000000000000000101, out=11000000000000000000000000000011
[ALU] inp1=00000000000000000000000000101001, inp2=01100000000000000000000000000010, alusel=01, res=10100000000000000000000000100111
[REG] inp=00000000000000000000000000101001, out=00000000000000000000000000101000
[ASSIGN_XOR] op1=1, op2=0, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000101010, op2=10000000000000000000000000000101, out=11100000000000000000000000000011
[ALU] inp1=00000000000000000000000000101010, inp2=01010000000000000000000000000010, alusel=10, res=00000000000000000000000000000010
[REG] inp=00000000000000000000000000101010, out=00000000000000000000000000101001
[ASSIGN_XOR] op1=0, op2=1, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000101011, op2=10100000000000000000000000000101, out=00000000000000000000000000000100
[ALU] inp1=00000000000000000000000000101011, inp2=01110000000000000000000000000010, alusel=11, res=01110000000000000000000000101011
[REG] inp=00000000000000000000000000101011, out=00000000000000000000000000101010
[ASSIGN_XOR] op1=1, op2=1, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000101100, op2=01000000000000000000000000000101, out=00100000000000000000000000000100
[ALU] inp1=00000000000000000000000000101100, inp2=11000000000000000000000000000010, alusel=00, res=11000000000000000000000000101110
[REG] inp=00000000000000000000000000101100, out=00000000000000000000000000101011
[ASSIGN_XOR] op1=0, op2=0, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000101101, op2=01100000000000000000000000000101, out=10000000000000000000000000000100
[ALU] inp1=00000000000000000000000000101101, inp2=11100000000000000000000000000010, alusel=01, res=00100000000000000000000000101011
[REG] inp=00000000000000000000000000101101, out=00000000000000000000000000101100
[ASSIGN_XOR] op1=1, op2=0, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000101110, op2=11000000000000000000000000000101, out=10100000000000000000000000000100
[ALU] inp1=00000000000000000000000000101110, inp2=11010000000000000000000000000010, alusel=10, res=00000000000000000000000000000010
[REG] inp=00000000000000000000000000101110, out=00000000000000000000000000101101
[ASSIGN_XOR] op1=0, op2=1, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000101111, op2=11100000000000000000000000000101, out=01000000000000000000000000000100
[ALU] inp1=00000000000000000000000000101111, inp2=11110000000000000000000000000010, alusel=11, res=11110000000000000000000000101111
[REG] inp=00000000000000000000000000101111, out=00000000000000000000000000101110
[ASSIGN_XOR] op1=1, op2=1, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000110000, op2=00000000000000000000000000000110, out=01100000000000000000000000000100
[ALU] inp1=00000000000000000000000000110000, inp2=00000000000000000000000000000011, alusel=00, res=00000000000000000000000000110011
[REG] inp=00000000000000000000000000110000, out=00000000000000000000000000101111
[ASSIGN_XOR] op1=0, op2=0, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000110001, op2=00100000000000000000000000000110, out=11000000000000000000000000000100
[ALU] inp1=00000000000000000000000000110001, inp2=00100000000000000000000000000011, alusel=01, res=11100000000000000000000000101110
[REG] inp=00000000000000000000000000110001, out=00000000000000000000000000110000
[ASSIGN_XOR] op1=1, op2=0, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000110010, op2=10000000000000000000000000000110, out=11100000000000000000000000000100
[ALU] inp1=00000000000000000000000000110010, inp2=00010000000000000000000000000011, alusel=10, res=00000000000000000000000000000010
[REG] inp=00000000000000000000000000110010, out=00000000000000000000000000110001
[ASSIGN_XOR] op1=0, op2=1, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000110011, op2=10100000000000000000000000000110, out=00000000000000000000000000000101
[ALU] inp1=00000000000000000000000000110011, inp2=00110000000000000000000000000011, alusel=11, res=00110000000000000000000000110011
[REG] inp=00000000000000000000000000110011, out=00000000000000000000000000110010
[ASSIGN_XOR] op1=1, op2=1, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000110100, op2=01000000000000000000000000000110, out=00100000000000000000000000000101
[ALU] inp1=00000000000000000000000000110100, inp2=10000000000000000000000000000011, alusel=00, res=10000000000000000000000000110111
[REG] inp=00000000000000000000000000110100, out=00000000000000000000000000110011
[ASSIGN_XOR] op1=0, op2=0, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000110101, op2=01100000000000000000000000000110, out=10000000000000000000000000000101
[ALU] inp1=00000000000000000000000000110101, inp2=10100000000000000000000000000011, alusel=01, res=01100000000000000000000000110010
[REG] inp=00000000000000000000000000110101, out=00000000000000000000000000110100
[ASSIGN_XOR] op1=1, op2=0, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000110110, op2=11000000000000000000000000000110, out=10100000000000000000000000000101
[ALU] inp1=00000000000000000000000000110110, inp2=10010000000000000000000000000011, alusel=10, res=00000000000000000000000000000010
[REG] inp=00000000000000000000000000110110, out=00000000000000000000000000110101
[ASSIGN_XOR] op1=0, op2=1, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000110111, op2=11100000000000000000000000000110, out=01000000000000000000000000000101
[ALU] inp1=00000000000000000000000000110111, inp2=10110000000000000000000000000011, alusel=11, res=10110000000000000000000000110111
[REG] inp=00000000000000000000000000110111, out=00000000000000000000000000110110
[ASSIGN_XOR] op1=1, op2=1, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000111000, op2=00000000000000000000000000000111, out=01100000000000000000000000000101
[ALU] inp1=00000000000000000000000000111000, inp2=01000000000000000000000000000011, alusel=00, res=01000000000000000000000000111011
[REG] inp=00000000000000000000000000111000, out=00000000000000000000000000110111
[ASSIGN_XOR] op1=0, op2=0, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000111001, op2=00100000000000000000000000000111, out=11000000000000000000000000000101
[ALU] inp1=00000000000000000000000000111001, inp2=01100000000000000000000000000011, alusel=01, res=10100000000000000000000000110110
[REG] inp=00000000000000000000000000111001, out=00000000000000000000000000111000
[ASSIGN_XOR] op1=1, op2=0, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000111010, op2=10000000000000000000000000000111, out=11100000000000000000000000000101
[ALU] inp1=00000000000000000000000000111010, inp2=01010000000000000000000000000011, alusel=10, res=00000000000000000000000000000010
[REG] inp=00000000000000000000000000111010, out=00000000000000000000000000111001
[ASSIGN_XOR] op1=0, op2=1, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000111011, op2=10100000000000000000000000000111, out=00000000000000000000000000000110
[ALU] inp1=00000000000000000000000000111011, inp2=01110000000000000000000000000011, alusel=11, res=01110000000000000000000000111011
[REG] inp=00000000000000000000000000111011, out=00000000000000000000000000111010
[ASSIGN_XOR] op1=1, op2=1, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000111100, op2=01000000000000000000000000000111, out=00100000000000000000000000000110
[ALU] inp1=00000000000000000000000000111100, inp2=11000000000000000000000000000011, alusel=00, res=11000000000000000000000000111111
[REG] inp=00000000000000000000000000111100, out=00000000000000000000000000111011
[ASSIGN_XOR] op1=0, op2=0, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000111101, op2=01100000000000000000000000000111, out=10000000000000000000000000000110
[ALU] inp1=00000000000000000000000000111101, inp2=11100000000000000000000000000011, alusel=01, res=00100000000000000000000000111010
[REG] inp=00000000000000000000000000111101, out=00000000000000000000000000111100
[ASSIGN_XOR] op1=1, op2=0, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000111110, op2=11000000000000000000000000000111, out=10100000000000000000000000000110
[ALU] inp1=00000000000000000000000000111110, inp2=11010000000000000000000000000011, alusel=10, res=00000000000000000000000000000010
[REG] inp=00000000000000000000000000111110, out=00000000000000000000000000111101
[ASSIGN_XOR] op1=0, op2=1, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000000111111, op2=11100000000000000000000000000111, out=01000000000000000000000000000110
[ALU] inp1=00000000000000000000000000111111, inp2=11110000000000000000000000000011, alusel=11, res=11110000000000000000000000111111
[REG] inp=00000000000000000000000000111111, out=00000000000000000000000000111110
[ASSIGN_XOR] op1=1, op2=1, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000001000000, op2=00000000000000000000000000001000, out=01100000000000000000000000000110
[ALU] inp1=00000000000000000000000001000000, inp2=00000000000000000000000000000100, alusel=00, res=00000000000000000000000001000100
[REG] inp=00000000000000000000000001000000, out=00000000000000000000000000111111
[ASSIGN_XOR] op1=0, op2=0, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000001000001, op2=00100000000000000000000000001000, out=11000000000000000000000000000110
[ALU] inp1=00000000000000000000000001000001, inp2=00100000000000000000000000000100, alusel=01, res=11100000000000000000000000111101
[REG] inp=00000000000000000000000001000001, out=00000000000000000000000001000000
[ASSIGN_XOR] op1=1, op2=0, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000001000010, op2=10000000000000000000000000001000, out=11100000000000000000000000000110
[ALU] inp1=00000000000000000000000001000010, inp2=00010000000000000000000000000100, alusel=10, res=00000000000000000000000000000000
[REG] inp=00000000000000000000000001000010, out=00000000000000000000000001000001
[ASSIGN_XOR] op1=0, op2=1, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000001000011, op2=10100000000000000000000000001000, out=00000000000000000000000000000111
[ALU] inp1=00000000000000000000000001000011, inp2=00110000000000000000000000000100, alusel=11, res=00110000000000000000000001000111
[REG] inp=00000000000000000000000001000011, out=00000000000000000000000001000010
[ASSIGN_XOR] op1=1, op2=1, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000001000100, op2=01000000000000000000000000001000, out=00100000000000000000000000000111
[ALU] inp1=00000000000000000000000001000100, inp2=10000000000000000000000000000100, alusel=00, res=10000000000000000000000001001000
[REG] inp=00000000000000000000000001000100, out=00000000000000000000000001000011
[ASSIGN_XOR] op1=0, op2=0, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000001000101, op2=01100000000000000000000000001000, out=10000000000000000000000000000111
[ALU] inp1=00000000000000000000000001000101, inp2=10100000000000000000000000000100, alusel=01, res=01100000000000000000000001000001
[REG] inp=00000000000000000000000001000101, out=00000000000000000000000001000100
[ASSIGN_XOR] op1=1, op2=0, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000001000110, op2=11000000000000000000000000001000, out=10100000000000000000000000000111
[ALU] inp1=00000000000000000000000001000110, inp2=10010000000000000000000000000100, alusel=10, res=00000000000000000000000000000100
[REG] inp=00000000000000000000000001000110, out=00000000000000000000000001000101
[ASSIGN_XOR] op1=0, op2=1, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000001000111, op2=11100000000000000000000000001000, out=01000000000000000000000000000111
[ALU] inp1=00000000000000000000000001000111, inp2=10110000000000000000000000000100, alusel=11, res=10110000000000000000000001000111
[REG] inp=00000000000000000000000001000111, out=00000000000000000000000001000110
[ASSIGN_XOR] op1=1, op2=1, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000001001000, op2=00000000000000000000000000001001, out=01100000000000000000000000000111
[ALU] inp1=00000000000000000000000001001000, inp2=01000000000000000000000000000100, alusel=00, res=01000000000000000000000001001100
[REG] inp=00000000000000000000000001001000, out=00000000000000000000000001000111
[ASSIGN_XOR] op1=0, op2=0, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000001001001, op2=00100000000000000000000000001001, out=11000000000000000000000000000111
[ALU] inp1=00000000000000000000000001001001, inp2=01100000000000000000000000000100, alusel=01, res=10100000000000000000000001000101
[REG] inp=00000000000000000000000001001001, out=00000000000000000000000001001000
[ASSIGN_XOR] op1=1, op2=0, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000001001010, op2=10000000000000000000000000001001, out=11100000000000000000000000000111
[ALU] inp1=00000000000000000000000001001010, inp2=01010000000000000000000000000100, alusel=10, res=00000000000000000000000000000000
[REG] inp=00000000000000000000000001001010, out=00000000000000000000000001001001
[ASSIGN_XOR] op1=0, op2=1, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000001001011, op2=10100000000000000000000000001001, out=00000000000000000000000000001000
[ALU] inp1=00000000000000000000000001001011, inp2=01110000000000000000000000000100, alusel=11, res=01110000000000000000000001001111
[REG] inp=00000000000000000000000001001011, out=00000000000000000000000001001010
[ASSIGN_XOR] op1=1, op2=1, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000001001100, op2=01000000000000000000000000001001, out=00100000000000000000000000001000
[ALU] inp1=00000000000000000000000001001100, inp2=11000000000000000000000000000100, alusel=00, res=11000000000000000000000001010000
[REG] inp=00000000000000000000000001001100, out=00000000000000000000000001001011
[ASSIGN_XOR] op1=0, op2=0, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000001001101, op2=01100000000000000000000000001001, out=10000000000000000000000000001000
[ALU] inp1=00000000000000000000000001001101, inp2=11100000000000000000000000000100, alusel=01, res=00100000000000000000000001001001
[REG] inp=00000000000000000000000001001101, out=00000000000000000000000001001100
[ASSIGN_XOR] op1=1, op2=0, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000001001110, op2=11000000000000000000000000001001, out=10100000000000000000000000001000
[ALU] inp1=00000000000000000000000001001110, inp2=11010000000000000000000000000100, alusel=10, res=00000000000000000000000000000100
[REG] inp=00000000000000000000000001001110, out=00000000000000000000000001001101
[ASSIGN_XOR] op1=0, op2=1, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000001001111, op2=11100000000000000000000000001001, out=01000000000000000000000000001000
[ALU] inp1=00000000000000000000000001001111, inp2=11110000000000000000000000000100, alusel=11, res=11110000000000000000000001001111
[REG] inp=00000000000000000000000001001111, out=00000000000000000000000001001110
[ASSIGN_XOR] op1=1, op2=1, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000001010000, op2=00000000000000000000000000001010, out=01100000000000000000000000001000
[ALU] inp1=00000000000000000000000001010000, inp2=00000000000000000000000000000101, alusel=00, res=00000000000000000000000001010101
[REG] inp=00000000000000000000000001010000, out=00000000000000000000000001001111
[ASSIGN_XOR] op1=0, op2=0, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000001010001, op2=00100000000000000000000000001010, out=11000000000000000000000000001000
[ALU] inp1=00000000000000000000000001010001, inp2=00100000000000000000000000000101, alusel=01, res=11100000000000000000000001001100
[REG] inp=00000000000000000000000001010001, out=00000000000000000000000001010000
[ASSIGN_XOR] op1=1, op2=0, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000001010010, op2=10000000000000000000000000001010, out=11100000000000000000000000001000
[ALU] inp1=00000000000000000000000001010010, inp2=00010000000000000000000000000101, alusel=10, res=00000000000000000000000000000000
[REG] inp=00000000000000000000000001010010, out=00000000000000000000000001010001
[ASSIGN_XOR] op1=0, op2=1, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000001010011, op2=10100000000000000000000000001010, out=00000000000000000000000000001001
[ALU] inp1=00000000000000000000000001010011, inp2=00110000000000000000000000000101, alusel=11, res=00110000000000000000000001010111
[REG] inp=00000000000000000000000001010011, out=00000000000000000000000001010010
[ASSIGN_XOR] op1=1, op2=1, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000001010100, op2=01000000000000000000000000001010, out=00100000000000000000000000001001
[ALU] inp1=00000000000000000000000001010100, inp2=10000000000000000000000000000101, alusel=00, res=10000000000000000000000001011001
[REG] inp=00000000000000000000000001010100, out=00000000000000000000000001010011
[ASSIGN_XOR] op1=0, op2=0, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000001010101, op2=01100000000000000000000000001010, out=10000000000000000000000000001001
[ALU] inp1=00000000000000000000000001010101, inp2=10100000000000000000000000000101, alusel=01, res=01100000000000000000000001010000
[REG] inp=00000000000000000000000001010101, out=00000000000000000000000001010100
[ASSIGN_XOR] op1=1, op2=0, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000001010110, op2=11000000000000000000000000001010, out=10100000000000000000000000001001
[ALU] inp1=00000000000000000000000001010110, inp2=10010000000000000000000000000101, alusel=10, res=00000000000000000000000000000100
[REG] inp=00000000000000000000000001010110, out=00000000000000000000000001010101
[ASSIGN_XOR] op1=0, op2=1, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000001010111, op2=11100000000000000000000000001010, out=01000000000000000000000000001001
[ALU] inp1=00000000000000000000000001010111, inp2=10110000000000000000000000000101, alusel=11, res=10110000000000000000000001010111
[REG] inp=00000000000000000000000001010111, out=00000000000000000000000001010110
[ASSIGN_XOR] op1=1, op2=1, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000001011000, op2=00000000000000000000000000001011, out=01100000000000000000000000001001
[ALU] inp1=00000000000000000000000001011000, inp2=01000000000000000000000000000101, alusel=00, res=01000000000000000000000001011101
[REG] inp=00000000000000000000000001011000, out=00000000000000000000000001010111
[ASSIGN_XOR] op1=0, op2=0, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000001011001, op2=00100000000000000000000000001011, out=11000000000000000000000000001001
[ALU] inp1=00000000000000000000000001011001, inp2=01100000000000000000000000000101, alusel=01, res=10100000000000000000000001010100
[REG] inp=00000000000000000000000001011001, out=00000000000000000000000001011000
[ASSIGN_XOR] op1=1, op2=0, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000001011010, op2=10000000000000000000000000001011, out=11100000000000000000000000001001
[ALU] inp1=00000000000000000000000001011010, inp2=01010000000000000000000000000101, alusel=10, res=00000000000000000000000000000000
[REG] inp=00000000000000000000000001011010, out=00000000000000000000000001011001
[ASSIGN_XOR] op1=0, op2=1, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000001011011, op2=10100000000000000000000000001011, out=00000000000000000000000000001010
[ALU] inp1=00000000000000000000000001011011, inp2=01110000000000000000000000000101, alusel=11, res=01110000000000000000000001011111
[REG] inp=00000000000000000000000001011011, out=00000000000000000000000001011010
[ASSIGN_XOR] op1=1, op2=1, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000001011100, op2=01000000000000000000000000001011, out=00100000000000000000000000001010
[ALU] inp1=00000000000000000000000001011100, inp2=11000000000000000000000000000101, alusel=00, res=11000000000000000000000001100001
[REG] inp=00000000000000000000000001011100, out=00000000000000000000000001011011
[ASSIGN_XOR] op1=0, op2=0, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000001011101, op2=01100000000000000000000000001011, out=10000000000000000000000000001010
[ALU] inp1=00000000000000000000000001011101, inp2=11100000000000000000000000000101, alusel=01, res=00100000000000000000000001011000
[REG] inp=00000000000000000000000001011101, out=00000000000000000000000001011100
[ASSIGN_XOR] op1=1, op2=0, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000001011110, op2=11000000000000000000000000001011, out=10100000000000000000000000001010
[ALU] inp1=00000000000000000000000001011110, inp2=11010000000000000000000000000101, alusel=10, res=00000000000000000000000000000100
[REG] inp=00000000000000000000000001011110, out=00000000000000000000000001011101
[ASSIGN_XOR] op1=0, op2=1, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000001011111, op2=11100000000000000000000000001011, out=01000000000000000000000000001010
[ALU] inp1=00000000000000000000000001011111, inp2=11110000000000000000000000000101, alusel=11, res=11110000000000000000000001011111
[REG] inp=00000000000000000000000001011111, out=00000000000000000000000001011110
[ASSIGN_XOR] op1=1, op2=1, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000001100000, op2=00000000000000000000000000001100, out=01100000000000000000000000001010
[ALU] inp1=00000000000000000000000001100000, inp2=00000000000000000000000000000110, alusel=00, res=00000000000000000000000001100110
[REG] inp=00000000000000000000000001100000, out=00000000000000000000000001011111
[ASSIGN_XOR] op1=0, op2=0, res=0
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000001100001, op2=00100000000000000000000000001100, out=11000000000000000000000000001010
[ALU] inp1=00000000000000000000000001100001, inp2=00100000000000000000000000000110, alusel=01, res=11100000000000000000000001011011
[REG] inp=00000000000000000000000001100001, out=00000000000000000000000001100000
[ASSIGN_XOR] op1=1, op2=0, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000001100010, op2=10000000000000000000000000001100, out=11100000000000000000000000001010
[ALU] inp1=00000000000000000000000001100010, inp2=00010000000000000000000000000110, alusel=10, res=00000000000000000000000000000010
[REG] inp=00000000000000000000000001100010, out=00000000000000000000000001100001
[ASSIGN_XOR] op1=0, op2=1, res=1
 clk = 0
###########
 clk = 1
[TSP] op1=00000000000000000000000001100011, op2=10100000000000000000000000001100, out=00000000000000000000000000001011
[ALU] inp1=00000000000000000000000001100011, inp2=00110000000000000000000000000110, alusel=11, res=00110000000000000000000001100111
[REG] inp=00000000000000000000000001100011, out=00000000000000000000000001100010
[ASSIGN_XOR] op1=1, op2=1, res=0
[PD0] No error encountered
- /home/parallels/github/EECS-4201-project/project/pd0/verif/tests/test_pd.sv:30: Verilog $finish
make: Leaving directory '/home/parallels/github/EECS-4201-project/project/pd0/verif/scripts'
